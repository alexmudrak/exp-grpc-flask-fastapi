# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import service_pb2


class FastApiGrpcBase(abc.ABC):

    @abc.abstractmethod
    async def GetRecord(self, stream: 'grpclib.server.Stream[service_pb2.EntityRequest, service_pb2.EntityResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/FastApiGrpc/GetRecord': grpclib.const.Handler(
                self.GetRecord,
                grpclib.const.Cardinality.UNARY_UNARY,
                service_pb2.EntityRequest,
                service_pb2.EntityResponse,
            ),
        }


class FastApiGrpcStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetRecord = grpclib.client.UnaryUnaryMethod(
            channel,
            '/FastApiGrpc/GetRecord',
            service_pb2.EntityRequest,
            service_pb2.EntityResponse,
        )
